name: CI/CD Pipeline for OpenShift

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to OpenShift using the OpenShift token and server URL
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.OPENSHIFT_TOKEN }} --server=${{ secrets.OPENSHIFT_SERVER }}

      # Step 3: Set OpenShift Project (replace with your actual project name)
      - name: Set OpenShift Project
        run: |
          oc project india-dev  # Replace with your OpenShift project name

      # Step 4: Trigger OpenShift Build
      - name: Start OpenShift Build
        run: |
          oc start-build cms-karma-kebab --wait  # Trigger the build and wait for completion

      # Step 5: Restart the application by deleting the old running pod 
      - name: Restart the application by deleting the old running pod
        run: |
          oc get pods --selector=app=cms-karma-kebab --field-selector=status.phase=Running -o name | xargs -I {} oc delete {} --ignore-not-found=true

      # Step 6: Clean up previous pod (delete pod 'cms-karma-kebab-n' when 'cms-karma-kebab-n+1' is created)
      - name: Clean up previous pod
        run: |
          # Get the list of completed pods with the label 'app=cms-karma-kebab'
          PODS=$(oc get pods --selector=app=cms-karma-kebab --field-selector=status.phase=Succeeded -o custom-columns=":metadata.name")

          # Check if there are any completed pods
          if [ -z "$PODS" ]; then
            echo "No completed pods found for cms-karma-kebab."
            exit 0
          fi

          # Get the name of the latest completed pod
          CURRENT_POD=$(echo "$PODS" | head -n 1)

          # Get the previous pod (in this case, find the pod with the lowest version)
          PREVIOUS_POD=$(echo "$PODS" | grep -v $CURRENT_POD | sort | head -n 1)

          # Delete the previous pod if it exists
          if [ -n "$PREVIOUS_POD" ]; then
            echo "Deleting previous pod: $PREVIOUS_POD"
            oc delete pod $PREVIOUS_POD
          else
            echo "No previous pod found, skipping clean-up."
          fi

      # Step 7: Wait for the deployment to complete and ensure the pod is running
      - name: Wait for Pod to be Running
        run: |
          kubectl rollout status deployment/cms-karma-kebab --timeout=60s

      # Step 8: Run npm build inside the deployed pod
      - name: Run npm run build inside the pod
        run: |
          # Get the name of the running cms-karma-kebab pod
          POD_NAME=$(oc get pods --selector=app=cms-karma-kebab --field-selector=status.phase=Running -o jsonpath='{.items[0].metadata.name}')
          
          # Execute 'npm run build' in the pod
          oc exec $POD_NAME -- npm run build
